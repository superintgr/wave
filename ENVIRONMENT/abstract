\explanation, knowledge, information, computation\abstract\environment\

[explanation] This environment is required for seperating concerns from downstream tasks. Any downstream task could take on challenges in programming their constuctors strictly from the natural basis we might arrive at.
A natural basis is any set of transformation for which the existing chain of reasoning keeps their roots undetached. Detachment of any past construction is equivalent to detaching all constructors in that they don't represent the problem anymore.
It is required that constructions yield stable results, and this is not same as producing predicable outcomes or guranteed agreement of imperical tolerance. It is a statement that keeps the possibility of landing on one of the possible basis which only need be reversible.
Reversibility is preferred than dropout because the logical chain of reasoning through the environment support [see medium] means that any error could be in principle corrected and there need only be the limit of existing knowledge rather than limits in possible efforts that could restore any state.

Error correction is the only regular feature that any environment must ensure supporting the means of. Reversibility is essential here since it brings agreement with most known aspects of physics today.

[knowledge] It is a feature of a system with subsystems that extends beyond local environment variables, and keeps in effect the special kind of information across all connection paths such that all possible transformations that those paths could encode will cause the bearer of the histories to scale by proportional amount.
As David Deustch would usually put it, it is a piece of information that has causal property. When it is embodied in an object, it tends to remain so.
In our context, `knowledge` is spread out through all participating components of the environment. Any `component` encodes `participation` if any `function` that `transforms` the `global state` of our `system` and any `history` of the `environment` that contains the effect of such a `transition`, naturally `translate` the `dynamic` of all such `instance`(s) such that any `relative weight` accumulated with respect to those histories must make relative changes to all of the `proportional mixtures` regardless of the relative proximity.
The decay of such an effect is on the `relative` state of the `observer`(s) is dependent on the informal attachment to other such object(s) state. A regular network of environment variable will have their regular network of constructors through which the `density` information of all the state spaces map closely in connection with the changes caused to those variables.

[intormation] In the environment, there are `density operators`, `positional and representational` operators, `state matrix and wave function` and finally the `constructor network` for which all of those tasks are made possible.
`making tasks possible through constructors` :
    - tasks are not anything physical or specifiable independent of their substrates [see substrate],
    - the substrate here is the set of all possible states that our environment would power their formation through,
    - description is what the tasks encode through referring to their associated substrate conditions,
    - substrate conditions are those information bearing states at which the medium facillitates the representation of the attributable features along with their static variables; composing such a description in connection with an action that could be brought to evaluation process at which some other state may be said to represent a dependent variable.
    - the constructors are the natural translators of variables that could go through changes and construction is a process which requires such a constructor to follow through with the changes in order to cause some other changes. For following through to cause change in the dynamical snapshot of the event slice, following further transitions where change is made invalid or elastic, and for non elastic change surpassed in recurring cycle where some of the changes become unusuable -- all of those cases do not represent a successfull construction or perhaps a valid constructor in existence thereafter
    - since reversible information processing is a feature for our environment constructors, the reversing of any target state is not a construction after all, therefore all valid constructions would have to go through some form of irreversible changes.

[computation] Considering the irreversible tasks, it is reasonable that non-trivial transformations required in bringing to existence some task attributes or substrate properties or environment functionality etc. -- a construction being possible means their existence for which the specified transformations will be made possible at any time means that the knowledge of that capability in the medium where it is capable in reality and the substrate which gets prepared with specified attributes must all remain in lock step with each other in protecting the construction being possible for all instances of that knowledge giving rise to information.
At such state, all of the true statement must remain true unless other true statements are causally blocking some truth being made to describe something untrue, therefore all untrue statements would also be going through equivalent checks until none of these are made to bring into attention. Note that attention is being paid in full amount across all services by physical laws being subjected to account for all of physical objects.
The computation is then the following:
    - there exists a machine which could simulate any other machine
    - the simulations of all possible machines are equivalent under the equivalent mapping of their relative resource independent functions,
    - the physical motion of any system is equivalent under the dynamics of computing machine running the equivalent simulations,
    - the set of all possible states that any computer can take maps one to one with the set of states that could be taken by anything,
    - a program describes the physical motion of objects and their properties through instantiations of abstract objects that mimic the same transformation using discrete symbols,
    - a substrate is one attachable component of computing environments, where the substrate and the environment jointly isolated could bring changes in each others states,
    - a medium is a layer by which the substrate variables and computation variables communicate through medium variables,
    - computation variables and information variables must share a common substrate where medium connecting any states across the junctions share a common variable which computation substrate would have in record,
    - when a medium connects the substrate and information is processed via computation, there is a measurement which test is written with respect to,
    - testing of any transformation task is a non-perturbed one, and test is being effective when measurement set up as natural transitions of expected cross sections onto which the input values yield measurement information at the end of the function,
    - such a test is encoded as expectation value problem.

